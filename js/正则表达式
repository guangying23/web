在 JavaScript 中，正则表达式通常用于两个字符串方法 : search() 和 replace()。<br>
search() 方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。<br>
replace() 方法用于在字符串中用一些字符串替换另一些字符串，或替换一个与正则表达式匹配的子串。<br>
## 1. search
### 1.1 search() 方法使用正则表达式
使用正则表达式搜索 "Runoob" 字符串，且不区分大小写：
```
var str = "Visit Runoob!"; 
var n = str.search(/Runoob/i);
```
### 1.2 search() 方法使用字符串
search 方法可使用字符串作为参数。字符串参数会转换为正则表达式：
```
var str = "Visit Runoob!"; 
var n = str.search("Runoob");
```
## 2. replace
### 2.1 replace() 方法使用正则表达式
使用正则表达式且不区分大小写将字符串中的 Microsoft 替换为 Runoob :
```
var str = document.getElementById("demo").innerHTML; 
var txt = str.replace(/microsoft/i,"Runoob");
```
### 2.2 replace() 方法使用字符串
replace() 方法将接收字符串作为参数：
```
var str = document.getElementById("demo").innerHTML; 
var txt = str.replace("Microsoft","Runoob");
```
## 3. 正则表达式修饰符
修饰符 可以在全局搜索中不区分大小写:
| 修饰符 | 描述                                                     |
|--------|----------------------------------------------------------|
| i      | 执行对大小写不敏感的匹配。                               |
| g      | 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。 |
| m      | 执行多行匹配。                                           |

## 4. 正则表达式模式
方括号用于查找某个范围内的字符：
| 表达式 | 描述                       |
|--------|----------------------------|
| [abc]  | 查找方括号之间的任何字符。 |
| [0-9]  | 查找任何从 0 至 9 的数字。 |
| (x\|y) | 查找任何以 \| 分隔的选项。 |

元字符是拥有特殊含义的字符：
| 元字符 | 描述                                        |
|--------|---------------------------------------------|
| \d     | 查找数字。                                  |
| \s     | 查找空白字符。                              |
| \b     | 匹配单词边界。                              |
| \uxxxx | 查找以十六进制数 xxxx 规定的 Unicode 字符。 |

量词:
| 量词 | 描述                                |
|------|-------------------------------------|
| n+   | 匹配任何包含至少一个 n 的字符串。   |
| n*   | 匹配任何包含零个或多个 n 的字符串。 |
| n?   | 匹配任何包含零个或一个 n 的字符串。 |

## 5. 使用 RegExp 对象
在 JavaScript 中，RegExp 对象是一个预定义了属性和方法的正则表达式对象。

## 6. 使用 test()
test() 方法是一个正则表达式方法。<br>
test() 方法用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。

## 7. 使用 exec()
exec() 方法是一个正则表达式方法。<br>
exec() 方法用于检索字符串中的正则表达式的匹配。<br>
该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。<br>

